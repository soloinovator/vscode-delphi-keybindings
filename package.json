{
    "name": "delphi-keybindings",
    "displayName": "Delphi Keymap",
    "description": "Popular Delphi keybindings for Visual Studio Code",
    "version": "9.8.1",
    "publisher": "alefragnani",
    "galleryBanner": {
        "color": "#476e83",
        "theme": "dark"
    },
    "engines": {
        "vscode": "^1.74.0"
    },
    "categories": [
        "Keymaps"
    ],
    "keywords": [
        "keybindings",
        "keymap",
        "delphi"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "extensionKind": [
        "ui",
        "workspace"
    ],
    "capabilities": {
        "virtualWorkspaces": true,
        "untrustedWorkspaces": {
            "supported": true
        }
    },
    "main": "./dist/extension-node.js",
    "browser": "./dist/extension-web.js",
    "l10n": "./l10n",
    "icon": "images/icon.png",
    "license": "GPL-3.0",
    "homepage": "https://github.com/alefragnani/vscode-delphi-keybindings/blob/master/README.md",
    "repository": {
        "type": "git",
        "url": "https://github.com/alefragnani/vscode-delphi-keybindings.git"
    },
    "bugs": {
        "url": "https://github.com/alefragnani/vscode-delphi-keybindings/issues"
    },
    "sponsor": {
        "url": "https://github.com/sponsors/alefragnani"
    },
    "contributes": {
        "configuration": {
            "title": "%delphiKeybindings.configuration.title%",
            "properties": {
                "delphiKeybindings.delphiVersionInDocWiki": {
                    "type": "string",
                    "default": "Alexandria",
                    "description": "%delphiKeybindings.configuration.delphiVersionInDocWiki.description%",
                    "enum": [
                        "Alexandria",
                        "Sydney",
                        "Rio",
                        "Tokyo",
                        "Berlin",
                        "Seattle"
                    ],
                    "enumDescriptions": [
                        "Delphi 11 Alexandria",
                        "Delphi 10.4 Sydney",
                        "Delphi 10.3 Rio",
                        "Delphi 10.2 Tokyo",
                        "Delphi 10.1 Berlin",
                        "Delphi 10 Seattle"
                    ]
                }
            }
        },
        "commands": [
            {
                "command": "delphiKeybindings.help",
                "title": "%delphiKeybindings.commands.help.title%"
            },
            {
                "command": "delphiKeybindings.selectWord",
                "title": "%delphiKeybindings.commands.selectWord.title%"
            },
            {
                "command": "delphiKeybindings.whatsNew",
                "title": "%delphiKeybindings.commands.whatsNew.title%"
            }
        ],
        "keybindings": [
            {
                "mac": "f9",
                "win": "f9",
                "linux": "f9",
                "key": "f9",
                "command": "workbench.action.debug.start",
                "when": "!inDebugMode"
            },
            {
                "mac": "f9",
                "win": "f9",
                "linux": "f9",
                "key": "f9",
                "command": "workbench.action.debug.continue",
                "when": "inDebugMode"
            },
            {
                "mac": "f8",
                "win": "f8",
                "linux": "f8",
                "key": "f8",
                "command": "workbench.action.debug.stepOver",
                "when": "inDebugMode"
            },
            {
                "mac": "f7",
                "win": "f7",
                "linux": "f7",
                "key": "f7",
                "command": "workbench.action.debug.stepInto",
                "when": "inDebugMode"
            },
            {
                "mac": "shift+f8",
                "win": "shift+f8",
                "linux": "shift+f8",
                "key": "shift+f8",
                "command": "workbench.action.debug.stepOut",
                "when": "inDebugMode"
            },
            {
                "mac": "cmd+f2",
                "win": "ctrl+f2",
                "linux": "ctrl+f2",
                "key": "ctrl+f2",
                "command": "workbench.action.debug.stop",
                "when": "inDebugMode"
            },
            {
                "mac": "f4",
                "win": "f4",
                "linux": "f4",
                "key": "f4",
                "command": "editor.debug.action.runToCursor",
                "when": "inDebugMode"
            },
            {
                "mac": "f5",
                "win": "f5",
                "linux": "f5",
                "key": "f5",
                "command": "editor.debug.action.toggleBreakpoint",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+f7",
                "win": "ctrl+f7",
                "linux": "ctrl+f7",
                "key": "ctrl+f7",
                "command": "editor.debug.action.selectionToWatch",
                "when": "inDebugMode"
            },
            {
                "mac": "ctrl+f9",
                "win": "ctrl+f9",
                "linux": "ctrl+f9",
                "key": "ctrl+f9",
                "command": "workbench.action.tasks.build"
            },
            {
                "mac": "cmd+d",
                "win": "ctrl+d",
                "linux": "ctrl+d",
                "key": "ctrl+d",
                "command": "editor.action.formatDocument",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "mac": "cmd+r",
                "win": "ctrl+r",
                "linux": "ctrl+r",
                "key": "ctrl+r",
                "command": "editor.action.startFindReplaceAction",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "mac": "cmd+.",
                "win": "ctrl+.",
                "linux": "ctrl+.",
                "key": "ctrl+.",
                "command": "workbench.action.showCommands"
            },
            {
                "mac": "alt+g",
                "win": "alt+g",
                "linux": "alt+g",
                "key": "alt+g",
                "command": "workbench.action.gotoLine"
            },
            {
                "mac": "cmd+g",
                "win": "ctrl+g",
                "linux": "ctrl+g",
                "key": "ctrl+g",
                "command": "editor.action.goToDeclaration",
                "when": "editorHasDefinitionProvider && editorTextFocus"
            },
            {
                "mac": "cmd+shift+e",
                "win": "ctrl+shift+e",
                "linux": "ctrl+shift+e",
                "key": "ctrl+shift+e",
                "command": "editor.action.rename",
                "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
            },
            {
                "mac": "cmd+;",
                "win": "ctrl+;",
                "linux": "ctrl+;",
                "key": "ctrl+;",
                "command": "editor.action.commentLine",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "mac": "cmd+f12",
                "win": "ctrl+f12",
                "linux": "ctrl+f12",
                "key": "ctrl+f12",
                "command": "workbench.action.quickOpen"
            },
            {
                "mac": "alt+f7",
                "win": "alt+f7",
                "linux": "alt+f7",
                "key": "alt+f7",
                "command": "editor.action.marker.prev",
                "when": "editorFocus && !editorReadonly"
            },
            {
                "mac": "alt+f8",
                "win": "alt+f8",
                "linux": "alt+f8",
                "key": "alt+f8",
                "command": "editor.action.marker.next",
                "when": "editorFocus && !editorReadonly"
            },
            {
                "mac": "alt+shift+backspace",
                "win": "alt+shift+backspace",
                "linux": "alt+shift+backspace",
                "key": "alt+shift+backspace",
                "command": "redo",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "mac": "cmd+y",
                "win": "ctrl+y",
                "linux": "ctrl+y",
                "key": "ctrl+y",
                "command": "editor.action.deleteLines",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "mac": "cmd+shift+y",
                "win": "ctrl+shift+y",
                "linux": "ctrl+shift+y",
                "key": "ctrl+shift+y",
                "command": "deleteAllRight",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "mac": "cmd+t",
                "win": "ctrl+t",
                "linux": "ctrl+t",
                "key": "ctrl+t",
                "command": "deleteWordEndRight",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "mac": "cmd+shift+i",
                "win": "ctrl+shift+i",
                "linux": "ctrl+shift+i",
                "key": "ctrl+shift+i",
                "command": "editor.action.indentLines",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "mac": "alt+shift+down",
                "win": "alt+shift+down",
                "linux": "alt+shift+down",
                "key": "alt+shift+down",
                "command": "cursorColumnSelectDown",
                "when": "editorTextFocus"
            },
            {
                "mac": "alt+shift+up",
                "win": "alt+shift+up",
                "linux": "alt+shift+up",
                "key": "alt+shift+up",
                "command": "cursorColumnSelectUp",
                "when": "editorTextFocus"
            },
            {
                "mac": "alt+shift+end",
                "win": "alt+shift+end",
                "linux": "alt+shift+end",
                "key": "alt+shift+end",
                "command": "cursorEndSelect",
                "when": "editorTextFocus"
            },
            {
                "mac": "alt+shift+home",
                "win": "alt+shift+home",
                "linux": "alt+shift+home",
                "key": "alt+shift+home",
                "command": "cursorHomeSelect",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+alt+shift+end",
                "win": "ctrl+alt+shift+end",
                "linux": "ctrl+alt+shift+end",
                "key": "ctrl+alt+shift+end",
                "command": "cursorBottomSelect",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+alt+shift+home",
                "win": "ctrl+alt+shift+home",
                "linux": "ctrl+alt+shift+home",
                "key": "ctrl+alt+shift+home",
                "command": "cursorTopSelect",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+j",
                "win": "ctrl+j",
                "linux": "ctrl+j",
                "key": "ctrl+j",
                "command": "editor.action.showSnippets",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+right",
                "win": "ctrl+right",
                "linux": "ctrl+right",
                "key": "ctrl+right",
                "command": "cursorWordRight",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+left",
                "win": "ctrl+left",
                "linux": "ctrl+left",
                "key": "ctrl+left",
                "command": "cursorWordLeft",
                "when": "editorTextFocus"
            },
            {
                "mac": "cmd+n",
                "win": "ctrl+n",
                "linux": "ctrl+n",
                "key": "ctrl+n",
                "command": "editor.action.insertLineAfter",
                "when": "editorTextFocus && !editorReadonly"
            },
            {
                "mac": "cmd+shift+f4",
                "win": "ctrl+shift+f4",
                "linux": "ctrl+shift+f4",
                "key": "ctrl+shift+f4",
                "command": "workbench.action.closeOtherEditors"
            },
            {
                "mac": "cmd+shift+s",
                "win": "ctrl+shift+s",
                "linux": "ctrl+shift+s",
                "key": "ctrl+shift+s",
                "command": "workbench.action.files.saveAll"
            },
            {
                "mac": "cmd+shift+enter",
                "win": "ctrl+shift+enter",
                "linux": "ctrl+shift+enter",
                "key": "ctrl+shift+enter",
                "command": "editor.action.referenceSearch.trigger"
            },
            {
                "mac": "cmd+g",
                "win": "ctrl+g",
                "linux": "ctrl+g",
                "key": "ctrl+g",
                "command": "editor.action.goToDeclaration"
            },
            {
                "mac": "cmd+shift+h",
                "win": "ctrl+shift+h",
                "linux": "ctrl+shift+h",
                "key": "ctrl+shift+h",
                "command": "editor.action.showHover"
            },
            {
                "mac": "cmd+k n",
                "win": "ctrl+k n",
                "linux": "ctrl+k n",
                "key": "ctrl+k n",
                "command": "editor.action.transformToUppercase"
            },
            {
                "mac": "cmd+k o",
                "win": "ctrl+k o",
                "linux": "ctrl+k o",
                "key": "ctrl+k o",
                "command": "editor.action.transformToLowercase"
            },
            {
                "key": "f1",
                "command": "delphiKeybindings.help"
            },
            {
                "mac": "cmd+w",
                "win": "ctrl+w",
                "linux": "ctrl+w",
                "key": "ctrl+w",
                "command": "delphiKeybindings.selectWord"
            }
        ]
    },
    "eslintConfig": {
        "extends": [
            "vscode-ext"
        ]
    },
    "scripts": {
        "build": "webpack --mode development",
        "watch": "webpack --watch --mode development",
        "vscode:prepublish": "webpack --mode production",
        "webpack": "webpack --mode development",
        "webpack-dev": "webpack --mode development --watch",
        "compile": "tsc -p ./",
        "lint": "eslint -c package.json --ext .ts src",
        "pretest": "npm run compile && npm run lint",
        "test-compile": "tsc -p ./ && npm run webpack",
        "just-test": "node ./out/src/test/runTest.js",
        "test": "npm run test-compile && npm run just-test"
    },
    "dependencies": {
        "vscode-ext-selection": "1.1.0"
    },
    "devDependencies": {
        "@types/node": "^18.17.0",
        "@types/vscode": "^1.73.0",
        "@types/mocha": "^9.0.0",
        "@types/glob": "^7.1.4",
        "@types/sinon": "10.0.13",
        "@vscode/test-electron": "^2.5.2",
        "@typescript-eslint/eslint-plugin": "^6.0.0",
        "@typescript-eslint/parser": "^6.0.0",
        "eslint": "^8.1.0",
        "eslint-config-vscode-ext": "^1.1.0",
        "terser-webpack-plugin": "^5.2.4",
        "glob": "^7.1.7",
        "mocha": "^11.1.0",
        "sinon": "14.0.0",
        "ts-loader": "^9.2.5",
        "typescript": "^5.3.3",
        "webpack": "^5.94.0",
        "webpack-cli": "^4.8.0"
    }
}